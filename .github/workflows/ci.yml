name: Reusable Workflow

on:
  workflow_call:
    inputs:
      sonar_project_key:
        required: true
        type: string
#      docker_image_name:
#        required: true
#        type: string
    secrets:
      SONAR_TOKEN:
        required: true
#      DOCKERHUB_USERNAME:
#        required: true
#      DOCKERHUB_TOKEN:
#        required: true

jobs:
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            ~/.sonar/cache
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}

      - name: Run SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B verify sonar:sonar 
          -Dsonar.projectKey=${{ inputs.sonar_project_key }} 
          -Dsonar.organization=overly-spacious-stuff-association
          -Dsonar.host.url=https://sonarcloud.io 
          -Dsonar.login=$SONAR_TOKEN 
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

#  docker-build:
#    name: Build and Push Docker Image
#    runs-on: ubuntu-latest
#    needs: sonarcloud-analysis
#    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.docker_image_name }}:latest
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.docker_image_name }}:${{ github.sha }}